name: CI devops 2025
on:
  #to begin you want to launch this job in main and develop
  push:
    branches: [main]
  pull_request:

jobs:
  # test-backend: 
  #   runs-on: ubuntu-24.04
  #   steps:
  #    #checkout your github code using actions/checkout@v4
  #     - uses: actions/checkout@v4

  #    #do the same with another action (actions/setup-java@v4) that enable to setup jdk 21
  #     - name: Set up JDK 21
  #       uses: actions/setup-java@v4
  #       with:
  #         distribution: 'temurin'
  #         java-version: '21'

  #    #finally build your app with the latest command
  #     - name: Build and test with Maven
  #       working-directory: TP1/BackendAPI/notsosimpleapi/
  #       run: mvn clean verify --file pom.xml

  #     - name: Verify with Sonar
  #       working-directory: TP1/BackendAPI/notsosimpleapi/
  #       run: mvn -B verify sonar:sonar -Dsonar.projectKey=${{secrets.SONAR_PROJECTKEY}} -Dsonar.organization=${{vars.SONAR_ORGANIZATION}} -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}  --file pom.xml

  # # define job to build and publish docker image
  # build-and-push-docker-image:
  #   runs-on: ubuntu-24.04
  #   # run only when code is compiling and tests are passing
  #   needs: test-backend

  #   # steps to perform in job
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Login to DockerHub
  #       run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username ${{ vars.DOCKER_USERNAME }} --password-stdin

  #     - name: Build image and push backend
  #       uses: docker/build-push-action@v6
  #       with:
  #         # relative path to the place where source code with Dockerfile is located
  #         context: TP1/BackendAPI/notsosimpleapi/
  #         options: "--env-file ../../.env"
  #         # Note: tags has to be all lower-case
  #         tags:  ${{vars.DOCKER_USERNAME}}/tp-devops-simple-api:latest
  #         # build on feature branches, push only on main branch
  #         push: ${{ github.ref == 'refs/heads/main' }}


  #     - name: Build image and push database
  #       uses: docker/build-push-action@v6
  #       with:
  #         # relative path to the place where source code with Dockerfile is located
  #         context: TP1/Postgres/
  #         # Note: tags has to be all lower-case
  #         tags:  ${{vars.DOCKER_USERNAME}}/tp-devops-database:latest
  #         # DO the same for database
  #             # build on feature branches, push only on main branch
  #         push: ${{ github.ref == 'refs/heads/main' }}


  #     - name: Build image and push httpd
  #       uses: docker/build-push-action@v6
  #       with:
  #         # relative path to the place where source code with Dockerfile is located
  #         context: TP1/HTTPServer/
  #         # Note: tags has to be all lower-case
  #         tags:  ${{vars.DOCKER_USERNAME}}/tp-devops-httpd:latest
  #             # build on feature branches, push only on main branch
  #         push: ${{ github.ref == 'refs/heads/main' }}

  push-to-ansible:
    runs-on: ubuntu-24.04
    env:
      ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
    needs:
      build-and-push-docker-image
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Run playbook
        working-directory: TP3/ansible/
        shell: bash
        run: | 
          VAULT_FILE=$(mktemp)
          chmod 600 "$VAULT_FILE"
          printf '%s' "$ANSIBLE_VAULT_PASSWORD" > "$VAULT_FILE"

          # ensure temp file is removed on exit (even on failure)
          trap 'shred -u "$VAULT_FILE" 2>/dev/null || rm -f "$VAULT_FILE"' EXIT

          # run the playbook using the vault password file
          ansible-playbook -i inventories/setup.yml playbook.yml --vault-password-file "$VAULT_FILE"

